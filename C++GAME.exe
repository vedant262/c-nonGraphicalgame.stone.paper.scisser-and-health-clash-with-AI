#include <iostream>
#include <random>

using namespace std;

void displayWin() {
    cout << "Congratulations! You win the game!" << endl;
}

void displayLose() {
    cout << "You lost the game! Better luck next time!" << endl;
}

string getChoiceName(int choice) {
    switch(choice) {
        case 1: return "Rock";
        case 2: return "Paper";
        case 3: return "Scissors";
        default: return "Invalid";
    }
}

void playRockPaperScissors() {
    random_device rdd;
    mt19937 gen(rdd());
    uniform_int_distribution<int> dist(1, 3);

    int userChoice, computerChoice;
    int userScore = 0, computerScore = 0;

    for(int i = 0; i < 5; i++) {
        cout << "Round " << i + 1 << ": Enter your choice (1 for Rock, 2 for Paper, 3 for Scissors): ";
        cin >> userChoice;

        computerChoice = dist(gen);
        cout << "Computer chose: " << getChoiceName(computerChoice) << endl;

        if (userChoice == computerChoice) {
            cout << "It's a tie!" << endl;
        } else if ((userChoice == 1 && computerChoice == 3) || 
                   (userChoice == 2 && computerChoice == 1) || 
                   (userChoice == 3 && computerChoice == 2)) {
            cout << "You win this round!" << endl;
            userScore++;
        } else {
            cout << "Computer wins this round!" << endl;
            computerScore++;
        }
    }

    cout << "Final Score -> You: " << userScore << " Computer: " << computerScore << endl;

    if (userScore > computerScore) {
        displayWin();
    } else if (computerScore > userScore) {
        displayLose();
    } else {
        cout << "It's a draw!" << endl;
    }
}

int getAIChoice() {
    random_device rd;
    mt19937 g(rd());
    uniform_int_distribution<int> d(1, 3);
    return d(g);
}

void processChoices(int hChoice, int aChoice, int &hHealth, int &aHealth) {
    if (hChoice == 3 && aChoice != 1) {  
        aHealth -= 2;
    } else if (hChoice == 2 && aChoice != 1) {  
        aHealth -= 1;
    } else if (hChoice == 3 && aChoice == 1) {  
        hHealth -= 2;
    } else if (hChoice == 1 && aChoice == 1) {  
        hHealth -= 1;
    }
    if (aChoice == 3 && hChoice != 1) {  
        hHealth -= 2;
    } else if (aChoice == 2 && hChoice != 1) {  
        hHealth -= 1;
    } else if (aChoice == 3 && hChoice == 1) {  
        aHealth -= 2;
    }
}

string choiceToStr(int ch) {
    switch (ch) {
        case 1: return "Shield";
        case 2: return "Half Attack";
        case 3: return "Max Attack";
        default: return "Invalid";
    }
}

void playHealthClash() {
    int hHealth = 11;  
    int aHealth = 10; 

    cout << "====================================\n";
    cout << "     Welcome to Health Clash!       \n";
    cout << "====================================\n";
    cout << "Rules:\n";
    cout << "1. You start with 11 health, and AI starts with 10 health.\n";
    cout << "2. You have 3 options:\n";
    cout << "   - 1 for Shield\n";
    cout << "   - 2 for Half Attack\n";
    cout << "   - 3 for Max Attack\n";
    cout << "3. If you choose Max Attack and AI doesn't shield, AI loses 2 health.\n";
    cout << "4. If you choose Half Attack and AI doesn't shield, AI loses 1 health.\n";
    cout << "5. If AI shields against your Max Attack, you lose 2 health.\n";
    cout << "6. If both you and AI choose Shield, you lose 1 health.\n";
    cout << "7. The game will be played for 5 rounds. Try to survive and defeat AI!\n";
    cout << "---------------------------------------------\n";


    for (int r = 0; r < 5; ++r) {
        cout << "\n--- Round " << r + 1 << " ---\n";
        cout << "====================================================================\n";
        cout << "Your health: " << hHealth << " | AI's health: " << aHealth << endl;
        cout << "====================================================================\n";
        int hChoice;
        cout << "Enter your choice (1: Shield, 2: Half Attack, 3: Max Attack): ";
        cin >> hChoice;

        int aChoice = getAIChoice();
        cout << "AI chose: " << choiceToStr(aChoice) << endl;

        processChoices(hChoice, aChoice, hHealth, aHealth);

        cout << "After this round:\n";
        cout << "====================================================================\n";
        cout << "Your health: " << hHealth << " | AI's health: " << aHealth << endl;
        cout << "====================================================================\n";

        if (hHealth <= 0 || aHealth <= 0) {
            break;
        }
    }

    cout << "\n--- Final Outcome ---\n";
    if (hHealth > aHealth) {
        cout << "******************************************************************\n";
        cout << "Congratulations! You win with " << hHealth << " health remaining!\n";
        cout << "******************************************************************\n";
    } else if (aHealth > hHealth) {
        cout << "******************************************************************\n";
        cout << "AI wins with " << aHealth << " health remaining. Better luck next time!\n";
        cout << "******************************************************************\n";
    } else {
        cout << "******************************************************************\n";
        cout << "It's a tie! Both you and AI have " << hHealth << " health remaining.\n";
        cout << "******************************************************************\n";
    }
}

int main() {
    int gameChoice;

    cout << "Welcome to the Game Hub!\n";
    cout << "Choose a game to play:\n";
    cout << "1. Rock-Paper-Scissors\n";
    cout << "2. Health Clash\n";
    cout << "Enter your choice: ";
    cin >> gameChoice;

    if (gameChoice == 1) {
        playRockPaperScissors();
    } else if (gameChoice == 2) {
        playHealthClash();
    } else {
        cout << "Invalid choice. Please restart the program and choose a valid game.\n";
    }

    return 0;
}
